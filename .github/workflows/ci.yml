name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install backend dependencies
      run: |
        pip install -r backend/requirements.txt

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install

    - name: Run backend lint
      run: |
        pip install flake8
        flake8 backend --max-line-length=120

    - name: Run frontend lint
      run: |
        cd frontend
        npm install eslint --save-dev
        npx eslint src

    - name: Run backend tests
      run: |
        cd backend
        pytest

  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build Docker images
      run: docker-compose build
    - name: Run Docker containers
      run: docker-compose up -d
    - name: Test Dockerized app
      run: |
        sleep 10
        curl http://localhost:8000/health

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Scan backend for vulnerabilities
      run: |
        pip install safety
        safety check -r backend/requirements.txt
    - name: Scan frontend for vulnerabilities
      run: |
        cd frontend
        npm audit
